"""Launch analyzer loader with parameters from yaml."""

import launch
import launch_ros.actions

analyzer_params_filepath = "@ANALYZER_PARAMS_FILEPATH@"

def generate_launch_description():
    use_transient_local = launch.substitutions.LaunchConfiguration('use_transient_local')
    argument = launch.actions.DeclareLaunchArgument(
        'use_transient_local',
        default_value='False'
    )
    aggregator = launch_ros.actions.Node(
        package='diagnostic_aggregator',
        executable='aggregator_node',
        output='screen',
        parameters=[
            analyzer_params_filepath,
            {'subscribe_transient_local': use_transient_local}
        ],
    )
    diag_publisher = launch_ros.actions.Node(
        package='diagnostic_aggregator',
        parameters=[
            {'publish_transient_local': use_transient_local}
        ],
        executable='example_pub.py'
    )
    return launch.LaunchDescription([
        argument,
        aggregator,
        diag_publisher,
        launch.actions.RegisterEventHandler(
            event_handler=launch.event_handlers.OnProcessExit(
                target_action=aggregator,
                on_exit=[launch.actions.EmitEvent(event=launch.events.Shutdown())],
            )),
    ])
